name: CI

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - .gitignore
      - "**/*.md"

jobs:
  build:
    strategy:
      matrix:
        toolchain:
          - 1.69.0
        include:
          - os: ubuntu-20.04
            arch: x64
            target: x86_64-unknown-linux-gnu
            extension: so          
          - os: ubuntu-20.04
            arch: aarch64
            target: aarch64-unknown-linux-gnu
            extension: so
          - os: ubuntu-20.04
            arch: aarch64
            target: aarch64-unknown-linux-gnu
            extension: so
          - os: macos-latest
            arch: x64
            target: x86_64-apple-darwin
            extension: dylib
          - os: windows-latest
            arch: x64
            target: x86_64-pc-windows-msvc
            extension: dll
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.target }}

      - uses: houseabsolute/actions-rust-cross@v0
        with:
          command: both
          target: ${{ matrix.target }} 
          args: "--release"
      
      - name: Generate json
        if: ${{ matrix.target == 'x86_64-unknown-linux-gnu' }}
        run: |
          URL=$(curl -sL "https://api.github.com/repos/luigi311/tanoshi/releases/latest" | grep "tanoshi-cli" | grep '"browser_download_url":' | sed -E 's/.*"([^"]+)".*/\1/') 
          curl -L $URL -o $HOME/.cargo/bin/tanoshi-cli
          chmod +x $HOME/.cargo/bin/tanoshi-cli
          $HOME/.cargo/bin/tanoshi-cli --path target/${{ matrix.target }}/release generate-json
          mv output/${{ matrix.target }}/index.json output/

      - if: ${{ matrix.target != 'x86_64-unknown-linux-gnu' }}
        run: |
          mkdir -p output/${{ matrix.target }}/
          cp target/${{ matrix.target }}/release/*.${{ matrix.extension }} output/${{ matrix.target }}/
      
      - if: ${{ matrix.target != 'x86_64-unknown-linux-gnu' && matrix.target != 'x86_64-pc-windows-msvc' }}
        run: cd output/${{ matrix.target }}/ && for f in *.${{ matrix.extension }};do mv $f ${f#lib}; done; cd ../..
      
      - name: Upload dist
        uses: actions/upload-artifact@v2
        with:
          name: repo-${{ matrix.toolchain }}
          path: output
  
  push:
    if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
    strategy:
      matrix:
        toolchain:
          - 1.69.0
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v2

      - run: git clone -b ${{ matrix.toolchain }} https://github.com/luigi311/tanoshi-extensions repository || git clone -b repository https://github.com/luigi311/tanoshi-extensions repository
      
      - name: Download dist
        uses: actions/download-artifact@v2
        with:
          name: repo-${{ matrix.toolchain }}
          path: repository

      - name: Commit files
        run: |
          cd repository
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "deploy"
          cd ..

      - name: Git Commit and Push
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ matrix.toolchain }}
          directory: repository
